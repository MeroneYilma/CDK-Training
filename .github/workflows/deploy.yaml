name: CDK Deploy

on:
  push:
    branches: ["main"]

jobs:
  aws_cdk:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Ensure lock file exists
        run: |
          if [ ! -f package-lock.json ] && [ ! -f yarn.lock ]; then
            npm install
          fi

      - name: Setup Node.js environment
        uses: actions/setup-node@v2
        with:
          node-version: 16
          cache: "npm"

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install root dependencies
        run: npm ci

      - name: Ensure lock file exists in subdirectory
        working-directory: ./aws_sso_group_mapping_stack
        run: |
          if [ ! -f package-lock.json ] && [ ! -f yarn.lock ]; then
            npm install
          fi

      - name: Install dependencies
        working-directory: ./aws_sso_group_mapping_stack
        run: npm ci

      - name: Install AWS CDK
        run: npm install -g aws-cdk

      - name: Initialize CDK app
        run: cdk init app --language python

      - name: Set up Python virtual environment
        run: python -m venv .env

      - name: Activate virtual environment
        run: source .env/bin/activate

      - name: Install Python dependencies
        run: pip install -r requirements.txt

      - name: Install AWS CDK library
        run: pip install aws-cdk-lib

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "us-east-1"

      - name: Synth stack
        working-directory: ./aws_sso_group_mapping_stack
        run: cdk synth

      - name: Deploy stack
        working-directory: ./aws_sso_group_mapping_stack
        run: cdk deploy --all --require-approval never